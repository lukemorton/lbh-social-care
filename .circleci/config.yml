version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  node-executor:
    docker:
      - image: circleci/node:12.16.2-browsers
  docker-python:
    docker:
      - image: circleci/python:3.7

references:
  workspace_root: &workspace_root "~"
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  install-dependencies-and-test:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ./.next/cache
            - /home/circleci/.cache/Cypress
      - run:
          name: Run linter
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Run E2E
          command: yarn e2e
      - store_artifacts:
          path: ~/repo/cypress/screenshots
      - store_artifacts:
          path: ~/repo/cypress/videos
      - persist_to_workspace:
          root: *workspace_root
          paths: .

  build-deploy-staging:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - run:
          name: deploy
          command: yarn build && yarn --production=true && sudo npm i -g serverless && sls deploy --stage staging

  build-deploy-production:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - run:
          name: deploy
          command: yarn build && yarn --production=true && sudo npm i -g serverless && sls deploy -s production

  assume-role-staging:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_STAGING
          profile_name: default
          role: "LBH_Circle_CI_Deployment_Role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-production:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_PRODUCTION
          profile_name: default
          role: "LBH_Circle_CI_Deployment_Role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - install-dependencies-and-test
      - assume-role-staging:
          context: api-assume-role-staging-context
          requires:
            - install-dependencies-and-test
          filters:
            branches:
              only: main
      - build-deploy-staging:
          requires:
            - install-dependencies-and-test
            - assume-role-staging
          filters:
            branches:
              only: main
      - permit-deploy-production:
          type: approval
          requires:
            - build-deploy-staging
          filters:
            branches:
              only: main
      - assume-role-production:
          context: api-assume-role-production-context
          requires:
            - install-dependencies-and-test
            - permit-deploy-production
          filters:
            branches:
              only: main
      - build-deploy-production:
          requires:
            - permit-deploy-production
            - assume-role-production
